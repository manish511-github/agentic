version: '3.8'
services:
  ragent:
    build:
      context: ./ragent
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - POSTGRES_DSN=${POSTGRES_DSN}
      - SYNC_POSTGRES_DSN=${SYNC_POSTGRES_DSN}
      - REDIS_URL=${REDIS_URL}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - REDDIT_USERNAME=${REDDIT_USERNAME}
      - REDDIT_PASSWORD=${REDDIT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - market-network
    restart: unless-stopped
    volumes:
      - ./ragent:/app
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/app"

  celery_worker:
    build:
      context: ./ragent
      dockerfile: Dockerfile
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - POSTGRES_DSN=${POSTGRES_DSN}
      - SYNC_POSTGRES_DSN=${SYNC_POSTGRES_DSN}
      - REDIS_URL=${REDIS_URL}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - REDDIT_USERNAME=${REDDIT_USERNAME}
      - REDDIT_PASSWORD=${REDDIT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - market-network
    restart: unless-stopped
    volumes:
      - ./ragent:/app
    command: celery -A app.celery_app worker --loglevel=info

  celery_beat:
    build:
      context: ./ragent
      dockerfile: Dockerfile
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - POSTGRES_DSN=${POSTGRES_DSN}
      - SYNC_POSTGRES_DSN=${SYNC_POSTGRES_DSN}
      - REDIS_URL=${REDIS_URL}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - REDDIT_USERNAME=${REDDIT_USERNAME}
      - REDDIT_PASSWORD=${REDDIT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - market-network
    restart: unless-stopped
    volumes:
      - ./ragent:/app
    command: celery -A app.celery_app beat --loglevel=info

  flower:
    build:
      context: ./ragent
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis
      - celery_worker
    networks:
      - market-network
    restart: unless-stopped
    command: celery -A app.celery_app flower --port=5555

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - market-network
    restart: unless-stopped

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - market-network
    restart: unless-stopped

networks:
  market-network:
    driver: bridge

volumes:
  postgres-data: